---
// FAQ data array
const faqItems = [
  {
    question: "What is Turple Cubes?",
    answer: "Turple Cubes is a development tool that provides pre-built, customizable containers for coding environments. It eliminates the need for manual setup, allowing developers to start coding instantly with all necessary dependencies pre-installed."
  },
  {
    question: "How does Turple Cubes help developers?",
    answer: "Turple Cubes streamlines the development process by offering reusable environments, seamless cross-platform compatibility, and a plugin system (Gears) that extends functionality. This saves time and reduces errors when setting up development environments."
  },
  {
    question: "Who can benefit from using Turple Cubes?",
    answer: "Turple Cubes is designed for freelance developers, small tech teams, startups, and students who need efficient and hassle-free coding environments. It is also beneficial for organizations looking for scalable and customizable development solutions."
  },
  {
    question: "What makes Turple Cubes different from other development platforms?",
    answer: "Unlike traditional virtual machines or standalone container platforms, Turple Cubes offers pre-built, reusable environments with easy integration and flexibility. It also features a marketplace where developers can buy or sell custom plugins (Gears)."
  },
  {
    question: "How can I get started with Turple Cubes?",
    answer: "Simply sign up, choose a pre-configured development container for your preferred language, and start coding instantly. You can also customize and save your environment for future use."
  }
];
---

<section class="py-20 relative">
    <div class="container mx-auto px-4">
      <div class="text-center mb-16">
        <h2 class="text-3xl md:text-4xl font-bold text-white">Frequently Asked Questions</h2>
        <p class="text-blue-400 mt-4 text-lg">Everything you need to know about Turple Cubes</p>
      </div>
  
      <div class="max-w-3xl mx-auto">
        {faqItems.map((item, index) => (
          <div class="mb-4">
            <button class="faq-toggle w-full text-left p-5 bg-gray-800 bg-opacity-50 rounded-lg hover:bg-opacity-70 transition-all duration-200">
              <div class="flex justify-between items-center">
                <h3 class="text-xl font-semibold text-white">{item.question}</h3>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-400 transform transition-transform duration-200" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
              </div>
            </button>
            <div class="faq-content overflow-hidden max-h-0 transition-all duration-300 ease-in-out">
              <div class="p-5 bg-gray-800 bg-opacity-30 rounded-b-lg text-gray-300">
                {item.answer}
              </div>
            </div>
          </div>
        ))}
      </div>
  
      <!-- CTA -->
      <div class="text-center mt-16">
        <p class="text-gray-300 mb-6">Still have questions about Turple Cubes?</p>
        <a href="/help" class="bg-blue-600 hover:bg-blue-700 text-white font-medium px-8 py-3 rounded-full transition inline-flex items-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M18 10c0 3.866-3.582-7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clip-rule="evenodd" />
          </svg>
          Contact Support
        </a>
      </div>
    </div>
  
    <!-- Decorative element -->
    <div class="absolute right-0 bottom-0 w-64 h-64 bg-blue-600/10 rounded-full blur-3xl -z-10"></div>
</section>
  
<script>
    // JavaScript for FAQ toggle functionality
    document.addEventListener('DOMContentLoaded', () => {
        const faqToggles = document.querySelectorAll('.faq-toggle');
        
        faqToggles.forEach(toggle => {
            toggle.addEventListener('click', () => {
                const content = toggle.nextElementSibling;
                const icon = toggle.querySelector('svg');
                
                // Toggle the active state
                toggle.classList.toggle('active');
                
                // Simplify the icon rotation and content height toggle
                const isActive = toggle.classList.contains('active');
                icon?.classList.toggle('rotate-180', isActive);
                if (content) {
                    (content as HTMLElement).style.maxHeight = isActive ? content.scrollHeight + "px" : "0";
                }
            });
        });
    });
</script>

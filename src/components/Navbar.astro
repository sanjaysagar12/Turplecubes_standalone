---
import "../styles/global.css";

interface Props {
  currentPath: string;
}

const { currentPath } = Astro.props;

const navItems = [
  { name: "Home", path: "/" },
  { name: "Services", path: currentPath === "/" ? "#services" : "/#services" },
  { name: "Help", path: "/help" },
  { name: "About Us", path: "/about" },
];
---

<nav class="fixed top-0 w-full bg-gray-900 shadow-lg z-50 border-b border-gray-800">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo & Brand Name -->
      <div class="flex items-center space-x-2">
        <a href="/">
          <img src="logo.svg" alt="Logo" class="h-8 w-auto" />
        </a>
        <span class="text-white font-semibold text-lg">Turple<span class="text-blue-500">Cubes</span></span>
      </div>

      <!-- Centered Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        {
          navItems.slice(0, 4).map((item) => (
            <a
              href={item.path}
              class={`text-lg transition-colors duration-200 ${
                currentPath === item.path
                  ? "text-blue-400 font-bold"
                  : "text-gray-300 hover:text-blue-400"
              }`}
              onclick={item.path.startsWith("#") ? `document.querySelector('${item.path}').scrollIntoView({ behavior: 'smooth' }); event.preventDefault();` : ""}
            >
              {item.name}
            </a>
          ))
        }
      </div>

      <!-- Register Button (Desktop) -->
      <div class="hidden md:flex items-center">
        <a
          href="/register"
          class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors transform hover:scale-105"
        >
          Register
        </a>
      </div>

      <!-- Mobile Menu Button -->
      <div class="md:hidden">
        <button
          id="mobile-menu-button"
          class="text-gray-300 hover:text-blue-400 focus:outline-none transition-transform duration-300"
        >
          <span class="sr-only">Open main menu</span>
          <div id="hamburger" class="w-6 h-5 flex flex-col justify-between">
            <span class="w-full h-0.5 bg-gray-300 transition-all duration-300 rounded-lg"></span>
            <span class="w-full h-0.5 bg-gray-300 transition-all duration-300 rounded-lg"></span>
            <span class="w-full h-0.5 bg-gray-300 transition-all duration-300 rounded-lg"></span>
          </div>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div id="mobile-menu" class="hidden md:hidden bg-gray-800 border-t border-gray-700 max-h-0 overflow-hidden transition-all duration-300 ease-in-out opacity-0">
    <div class="px-2 pt-2 pb-3 space-y-1">
      {
        navItems.map((item) => (
          <a
            href={item.path}
            class={`block px-3 py-2 rounded-md text-base ${
              currentPath === item.path
                ? "text-blue-400 bg-gray-700 font-medium"
                : "text-gray-300 hover:text-blue-400 hover:bg-gray-700"
            } transition-transform duration-300 transform hover:translate-x-2`}
            onclick={item.path.startsWith("#") ? `document.querySelector('${item.path}').scrollIntoView({ behavior: 'smooth' }); event.preventDefault();` : ""}
          >
            {item.name}
          </a>
        ))
      }
      <!-- Mobile Register Button -->
      <div class="flex flex-col mt-4 pt-4 border-t border-gray-700">
        <a
          href="/register"
          class="block px-3 py-2 rounded-md text-base text-white bg-blue-600 hover:bg-blue-700 transition-all duration-300 transform hover:translate-y-0.5"
        >
          Register
        </a>
      </div>
    </div>
  </div>
</nav>

<style>
  @keyframes fadeInDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .menu-open {
    animation: fadeInDown 0.3s ease-out forwards;
    max-height: 500px !important;
    opacity: 1 !important;
  }
  
  .hamburger-open span:first-child {
    transform: translateY(8px) rotate(45deg);
    background-color: #a78bfa;
  }
  
  .hamburger-open span:nth-child(2) {
    opacity: 0;
  }
  
  .hamburger-open span:last-child {
    transform: translateY(-8px) rotate(-45deg);
    background-color: #a78bfa;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");
    const hamburger = document.getElementById("hamburger");

    mobileMenuButton?.addEventListener("click", () => {
      // Toggle hamburger animation
      hamburger?.classList.toggle("hamburger-open");
      
      // Toggle menu with animation
      if (mobileMenu?.classList.contains("hidden")) {
        mobileMenu.classList.remove("hidden");
        // Trigger a reflow
        void mobileMenu.offsetWidth;
        mobileMenu.classList.add("menu-open");
      } else {
        mobileMenu?.classList.remove("menu-open");
        // Wait for animation to complete before hiding
        setTimeout(() => {
          mobileMenu?.classList.add("hidden");
        }, 300);
      }
    });
  });
</script>